@page "/login"
@using ListenTogether.Data;

@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject IUserService UserService
@inject ILoginDataStorage LoginDataStorage

<Loading IsLoading="_isLoading"></Loading>
<RouteAnimation>
    <div class="page">
        <MudPaper Class="pa-4" Elevation="0">
            <div class="d-flex mb-3">
                <MudIcon Icon="@Icons.Material.Filled.Lock" Color="Color.Primary"></MudIcon>
                <MudText Class="ml-1">登录</MudText>
            </div>
            <MudForm @ref="@_form"
                     Class="mb-3">
                <MudTextField T="string"
                              Label="用户名"
                @bind-Value="_username"
                              MaxLength="20"
                              Required="true"
                              RequiredError="请输入用户名"
                              Validation="@(new Func<string, IEnumerable<string>>(InputLength))" />
                <MudTextField T="string" Label="密码"
                @bind-Value="_password"
                              InputType="InputType.Password"
                              MaxLength="20"
                              Required="true"
                              RequiredError="密码不能为空"
                              Immediate="true"
                              OnKeyDown="OnPasswordKeyDown"
                              Validation="@(new Func<string, IEnumerable<string>>(InputLength))" />
                <MudButton Class="mt-5"
                           Variant="Variant.Filled"
                           EndIcon="@Icons.Material.Filled.Login"
                           Color="Color.Primary"
                           Style="width: 100%;"
                           OnClick="@(async () => await LoginAsync())">登录</MudButton>
            </MudForm>

            还没有账号？
            <MudElement HtmlTag="a"
                        Style="color: var(--mud-palette-primary);"
                        href="/register">
                点击注册
            </MudElement>
        </MudPaper>
    </div>
</RouteAnimation>
@code {
    private bool _isLoading = false;
    private MudForm _form = null!;
    private string _username = "";
    private string _password = "";

    private IEnumerable<string> InputLength(string value)
    {
        if (value.Length < 4)
        {
            yield return "长度不足";
        }
    }

    private async Task LoginAsync()
    {
        await _form.Validate();
        if (!_form.IsValid)
        {
            return;
        }
        _isLoading = true;
        var user = await UserService.LoginAsync(_username, _password);
        _isLoading = false;
        await InvokeAsync(StateHasChanged);
        if (user == null)
        {
            await DialogService.ShowMessageBox("", "登录失败", "确定");
            return;
        }
        LoginDataStorage.SetUsername(user.Username);
        LoginDataStorage.SetNickname(user.Nickname);
        LoginDataStorage.SetAvatar(user.Avatar);
        LoginDataStorage.SetToken(user.Token);
        LoginDataStorage.SetRefreshToken(user.RefreshToken);

        NavigationManager.NavigateTo("/settings");
    }

    private async Task OnPasswordKeyDown(KeyboardEventArgs value)
    {
        if (value.Key == "Enter")
        {
            await LoginAsync();
        }
    }
}
