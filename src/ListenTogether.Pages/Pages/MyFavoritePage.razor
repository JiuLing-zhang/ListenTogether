@page "/my-favorite"
@inherits MyComponentBase
@inject IMyFavoriteService MyFavoriteService
@inject NavigationManager NavigationManager
@inject MusicResultService MusicResultService
@inject IDialogService DialogService
@inject IPlaylistService PlaylistService
@inject ISnackbar Snackbar

<div class="header">
    <div><MudText Typo="Typo.h6">我的歌单</MudText></div>
    <MudButton Variant="Variant.Text"
               Class="ml-5"
               EndIcon="@Icons.Material.Filled.Add"
               IconSize="Size.Small"
               Size="Size.Small"
               Disabled="@(_myFavoriteList == null)"
               OnClick="@(()=>AddMyFavoriteAsync())"
               Color="Color.Primary">新建歌单</MudButton>
</div>
@if (_myFavoriteList == null)
{
    <MudSkeleton Class="mt-1" Height="40px" />
    <MudSkeleton Class="mt-1" Height="40px" />
    <MudSkeleton Class="mt-1" Height="40px" />
    <MudSkeleton Class="mt-1" Height="40px" />
}
else
{
    @if (!_myFavoriteList.Any())
    {
        <Empty OnRefresh="GetMyFavoriteListAsync" />
    }
    else
    {
        <MudList Clickable="true">
            @foreach (var myFavorite in _myFavoriteList)
            {
                <MudListItem>
                    <div class="d-flex align-center my-favorite" @onclick="@(()=>GotoMyFavoriteDetail(myFavorite.Id))">
                        <div class="flex-grow-0 tool">
                            <div class="play">
                                <MudIconButton Icon="@Icons.Material.Filled.PlayCircleOutline"
                                   Size="Size.Medium"
                                   OnClick="@(()=>PlayAllAsync(myFavorite.Id))"></MudIconButton>
                            </div>
                        </div>
                        <div class="d-flex align-center flex-grow-1 info">
                            <MudImage Src="@myFavorite.ImageUrl"
                          Width="40"
                          Height="40"
                          Elevation="5"
                          Class="rounded-lg mr-3" />
                            <div>
                                <div>@myFavorite.Name</div>
                                <div class="music-count">@myFavorite.MusicCount 首歌</div>
                            </div>
                        </div>
                    </div>
                </MudListItem>
                <MudHidden Breakpoint="Breakpoint.MdAndUp">
                    <MudDivider />
                </MudHidden>
            }
        </MudList>
    }
}

@code {


    private List<MyFavorite>? _myFavoriteList;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (IsNotLogin)
        {
            NavigationManager.NavigateTo("/login");
            return;
        }
        await GetMyFavoriteListAsync();
    }

    private async Task GetMyFavoriteListAsync()
    {
        _myFavoriteList = null;
        _myFavoriteList = await MyFavoriteService.GetAllAsync();
    }

    private async Task AddMyFavoriteAsync()
    {
        var options = new DialogOptions { ClassBackground = "dialog-backdrop" };
        var dialog = await DialogService.ShowAsync<MyFavoriteAdd>("", options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _myFavoriteList?.Add(result.Data as MyFavorite);
        }
    }

    private async Task PlayAllAsync(int myFavoriteId)
    {
        var myFavoriteDetail = await MyFavoriteService.GetMyFavoriteDetailAsync(myFavoriteId);
        if (!myFavoriteDetail.Any())
        {
            Snackbar.Add("播放失败，歌单是空的哦~~~", Severity.Error);
            return;
        }

        if (Settings.Environment.Play.IsCleanPlaylistWhenPlaySongMenu)
        {
            if (!await PlaylistService.RemoveAllAsync())
            {
                Snackbar.Add("播放列表清空失败", Severity.Error);
                return;
            }
        }

        var localMusics = myFavoriteDetail.Select(x => x.Music).ToList();
        await MusicResultService.PlayAllAsync(localMusics);
    }


    private void GotoMyFavoriteDetail(int id)
    {
        NavigationManager.NavigateTo($"/my-favorite-detail/{id}");
    }
}
